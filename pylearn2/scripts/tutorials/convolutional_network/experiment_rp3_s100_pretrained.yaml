!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.experiment.Experiment {
        which_set: 'train',
        which_experiment: 'RP3_S100',
        gcn: 55.0,
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: %(batch_size)i,
        seed: 12345,
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [32, 32],
            num_channels: 3
        },
        layers: [ !pkl: "%(base_save_path)s/mlp_pretrained_model.pkl",
                  !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h3',
                     dim: %(output_channels_h3)i,
                     init_bias: 1,
                     sparse_init: 15
                  },!obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.8,
                     layer_name: 'y',
                     n_classes: 10,
                     irange: .01
                  }
                ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: %(batch_size)i,
        train_iteration_mode: even_batchwise_shuffled_sequential,
        monitor_iteration_mode: even_batchwise_shuffled_sequential,
        learning_rate: 0.1,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: .5
        },
        monitoring_dataset:
            {
                'valid' : &valid !obj:pylearn2.datasets.experiment.Experiment {
                              which_set: 'valid',
                              which_experiment: 'RP3_S100',
                          },
                'test'  : &test !obj:pylearn2.datasets.experiment.Experiment {
                              which_set: 'test',
                              which_experiment: 'RP3_S100',
                          },
            },
        cost: !obj:pylearn2.costs.mlp.Default {},
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.ChannelTarget {
                    channel_name: "test_y_misclass",
                    target: 0.4,
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: %(max_epochs)i
                },
            ]
        },
    },
    extensions:
        [ !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: "test_y_misclass",
             save_path: "%(save_path)s/experiment_model.pkl",
        },
        !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 10,
            final_momentum: .65
        }
    ]
}
